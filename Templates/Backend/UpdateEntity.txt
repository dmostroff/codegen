<?php


namespace Domain\{$parentName}\Actions;

use Domain\{$parentName}\DTO\{$classNameDTO};
use Domain\{$parentName}\Entities\{$className};
use Domain\{$parentName}\Transformers\{$className}Transformer;
use Domain\Common\Deleter\RelatedEntitiesDeleter;

class Update{$className}
{
    private {$className} ${$entityName};
    private {$classNameDTO} ${$entityNameDto};

    function __construct ({$className} ${$entityName}, {$classNameDTO} ${$entityNameDto})
    {
        $this->{$entityName} = ${$entityName};
        $this->{$entityNameDto} = ${$entityNameDto};
    }

    public function handle () : {$className}
    {
        $this->{$entityName} = {$className}Transformer::transformDTOToEntity($this->{$entityNameDto}, $this->{$entityName});

        $em = app('em');

        $del = new RelatedEntitiesDeleter('{$entityName}',$this->{$entityName});

        $del->delete([{$deleteDependcies}]);

        $em->persist($this->{$entityName});
        $em->flush();

        return $this->{$entityName};
    }

}
